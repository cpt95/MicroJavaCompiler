INFO  16:43:10,588 - Compiling source file: D:\Fakultet\PP1\workspace\MJCompiler\test\program.mj
INFO  16:43:10,590 - #2 program
INFO  16:43:10,590 - #5 P
INFO  16:43:10,590 - #5 int
INFO  16:43:10,591 - #5 size
INFO  16:43:10,591 - #17 ;
INFO  16:43:10,591 - #28 const
INFO  16:43:10,591 - #5 int
INFO  16:43:10,591 - #5 a
INFO  16:43:10,591 - #25 =
INFO  16:43:10,591 - #24 2
INFO  16:43:10,591 - #8 ,
INFO  16:43:10,591 - #5 b
INFO  16:43:10,592 - #17 ;
INFO  16:43:10,592 - #16 class
INFO  16:43:10,592 - #5 Klasa
INFO  16:43:10,592 - #9 extends
INFO  16:43:10,592 - #5 a
INFO  16:43:10,592 - #5 b
INFO  16:43:10,592 - #3 {
INFO  16:43:10,592 - #5 int
INFO  16:43:10,592 - #5 val
INFO  16:43:10,592 - #25 =
INFO  16:43:10,592 - #17 ;
INFO  16:43:10,592 - #3 {
INFO  16:43:10,592 - #5 int
INFO  16:43:10,592 - #5 met
INFO  16:43:10,592 - #6 (
INFO  16:43:10,592 - #7 )
INFO  16:43:10,592 - #5 int
INFO  16:43:10,592 - #5 k
INFO  16:43:10,592 - #17 ;
INFO  16:43:10,592 - #3 {
INFO  16:43:10,592 - #4 }
INFO  16:43:10,593 - #4 }
INFO  16:43:10,593 - #4 }
INFO  16:43:10,593 - #3 {
INFO  16:43:10,593 - #5 int
INFO  16:43:10,593 - #5 metod1
INFO  16:43:10,593 - #6 (
INFO  16:43:10,593 - #5 double
INFO  16:43:10,593 - #5 r
INFO  16:43:10,593 - #5 int
INFO  16:43:10,593 - #5 prog
INFO  16:43:10,593 - #7 )
INFO  16:43:10,593 - #3 {
INFO  16:43:10,593 - #20 break
INFO  16:43:10,593 - #17 ;
INFO  16:43:10,593 - #42 do
INFO  16:43:10,593 - #3 {
INFO  16:43:10,593 - #18 if
INFO  16:43:10,593 - #6 (
INFO  16:43:10,593 - #5 a
INFO  16:43:10,593 - #38 >
INFO  16:43:10,593 - #24 3
INFO  16:43:10,593 - #45 &&
INFO  16:43:10,593 - #5 r
INFO  16:43:10,593 - #41 <=
INFO  16:43:10,593 - #24 8
INFO  16:43:10,593 - #29 ||
INFO  16:43:10,594 - #5 e
INFO  16:43:10,594 - #36 ==
INFO  16:43:10,594 - #5 a
INFO  16:43:10,594 - #7 )
INFO  16:43:10,594 - #43 read
INFO  16:43:10,594 - #6 (
INFO  16:43:10,594 - #5 f
INFO  16:43:10,594 - #12 .
INFO  16:43:10,594 - #5 niz
INFO  16:43:10,594 - #10 [
INFO  16:43:10,594 - #24 1
INFO  16:43:10,594 - #11 ]
INFO  16:43:10,594 - #7 )
INFO  16:43:10,595 - #17 ;
INFO  16:43:10,595 - #19 else
INFO  16:43:10,595 - #3 {
INFO  16:43:10,595 - #18 if
INFO  16:43:10,595 - #6 (
INFO  16:43:10,595 - #5 a
INFO  16:43:10,595 - #38 >
INFO  16:43:10,595 - #24 6
INFO  16:43:10,595 - #29 ||
INFO  16:43:10,595 - #5 y
INFO  16:43:10,595 - #36 ==
INFO  16:43:10,595 - #7 )
INFO  16:43:10,596 - #3 {
INFO  16:43:10,596 - #5 b
INFO  16:43:10,596 - #25 =
INFO  16:43:10,596 - #5 a
INFO  16:43:10,596 - #31 +
INFO  16:43:10,596 - #5 t
INFO  16:43:10,596 - #30 -
INFO  16:43:10,596 - #24 1
INFO  16:43:10,596 - #17 ;
INFO  16:43:10,596 - #23 print
INFO  16:43:10,596 - #6 (
INFO  16:43:10,596 - #5 r
INFO  16:43:10,596 - #7 )
INFO  16:43:10,596 - #17 ;
INFO  16:43:10,596 - #4 }
INFO  16:43:10,596 - #19 else
INFO  16:43:10,596 - #21 continue
INFO  16:43:10,596 - #17 ;
INFO  16:43:10,596 - #4 }
INFO  16:43:10,596 - #5 b
INFO  16:43:10,596 - #13 ++
INFO  16:43:10,596 - #17 ;
INFO  16:43:10,596 - #5 b
INFO  16:43:10,596 - #25 =
INFO  16:43:10,596 - #30 -
INFO  16:43:10,596 - #5 a
INFO  16:43:10,596 - #31 +
INFO  16:43:10,596 - #24 4
INFO  16:43:10,596 - #34 /
INFO  16:43:10,596 - #24 3
INFO  16:43:10,596 - #33 *
INFO  16:43:10,597 - #6 (
INFO  16:43:10,597 - #5 a
INFO  16:43:10,597 - #31 +
INFO  16:43:10,597 - #24 9
INFO  16:43:10,597 - #7 )
INFO  16:43:10,597 - #17 ;
INFO  16:43:10,597 - #5 b
INFO  16:43:10,597 - #25 =
INFO  16:43:10,597 - #30 -
INFO  16:43:10,597 - #5 a
INFO  16:43:10,597 - #31 +
INFO  16:43:10,597 - #24 4
INFO  16:43:10,597 - #34 /
INFO  16:43:10,597 - #24 3
INFO  16:43:10,597 - #33 *
INFO  16:43:10,597 - #6 (
INFO  16:43:10,597 - #5 a
INFO  16:43:10,597 - #31 +
INFO  16:43:10,597 - #7 )
INFO  16:43:10,597 - #17 ;
INFO  16:43:10,597 - #4 }
INFO  16:43:10,597 - #15 while
INFO  16:43:10,597 - #6 (
INFO  16:43:10,597 - #5 a
INFO  16:43:10,597 - #38 >
INFO  16:43:10,597 - #5 g
INFO  16:43:10,598 - #45 &&
INFO  16:43:10,598 - #5 g
INFO  16:43:10,598 - #39 >=
INFO  16:43:10,598 - #24 3
INFO  16:43:10,598 - #29 ||
INFO  16:43:10,598 - #5 u
INFO  16:43:10,598 - #36 ==
INFO  16:43:10,598 - #5 g
INFO  16:43:10,598 - #7 )
INFO  16:43:10,598 - #17 ;
INFO  16:43:10,598 - #5 c
INFO  16:43:10,598 - #14 --
INFO  16:43:10,598 - #17 ;
INFO  16:43:10,598 - #4 }
INFO  16:43:10,598 - #44 void
INFO  16:43:10,598 - #5 metod2
INFO  16:43:10,598 - #6 (
INFO  16:43:10,598 - #5 int
INFO  16:43:10,598 - #5 y
INFO  16:43:10,598 - #7 )
INFO  16:43:10,598 - #5 int
INFO  16:43:10,598 - #5 s
INFO  16:43:10,598 - #17 ;
INFO  16:43:10,598 - #3 {
INFO  16:43:10,598 - #4 }
INFO  16:43:10,598 - #4 }
