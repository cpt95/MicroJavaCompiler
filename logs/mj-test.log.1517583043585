INFO  15:48:15,733 - Compiling source file: D:\Fakultet\PP1\workspace\MJCompiler\test\program.mj
INFO  15:48:15,780 - #6 program
INFO  15:48:15,780 - #2 P
INFO  15:48:15,780 - #28 const
INFO  15:48:15,781 - #2 int
INFO  15:48:15,781 - #2 size
INFO  15:48:15,781 - #27 =
INFO  15:48:15,782 - #3 10
INFO  15:48:15,782 - #20 ;
INFO  15:48:15,782 - #28 const
INFO  15:48:15,782 - #2 int
INFO  15:48:15,782 - #2 si
INFO  15:48:15,782 - #27 =
INFO  15:48:15,782 - #5 t
INFO  15:48:15,783 - #20 ;
INFO  15:48:15,783 - #28 const
INFO  15:48:15,783 - #2 bool
INFO  15:48:15,783 - #2 b
INFO  15:48:15,783 - #27 =
INFO  15:48:15,783 - #4 false
INFO  15:48:15,783 - #20 ;
INFO  15:48:15,783 - #2 int
INFO  15:48:15,783 - #2 f
INFO  15:48:15,783 - #20 ;
INFO  15:48:15,784 - #19 class
INFO  15:48:15,784 - #2 Klasa
INFO  15:48:15,784 - #12 extends
INFO  15:48:15,784 - #2 int
INFO  15:48:15,784 - #7 {
INFO  15:48:15,784 - #2 int
INFO  15:48:15,785 - #2 niz
INFO  15:48:15,785 - #13 [
INFO  15:48:15,785 - #14 ]
INFO  15:48:15,785 - #20 ;
INFO  15:48:15,785 - #7 {
INFO  15:48:15,785 - #44 void
INFO  15:48:15,785 - #2 metoda1
INFO  15:48:15,785 - #9 (
INFO  15:48:15,785 - #2 int
INFO  15:48:15,785 - #2 x
INFO  15:48:15,785 - #11 ,
INFO  15:48:15,786 - #2 char
INFO  15:48:15,786 - #2 p
INFO  15:48:15,786 - #10 )
INFO  15:48:15,786 - #7 {
INFO  15:48:15,786 - #2 niz
INFO  15:48:15,787 - #13 [
INFO  15:48:15,787 - #3 2
INFO  15:48:15,787 - #14 ]
INFO  15:48:15,787 - #27 =
INFO  15:48:15,788 - #3 2
INFO  15:48:15,788 - #33 *
INFO  15:48:15,788 - #2 x
INFO  15:48:15,788 - #30 -
INFO  15:48:15,789 - #9 (
INFO  15:48:15,789 - #2 x
INFO  15:48:15,789 - #34 /
INFO  15:48:15,789 - #3 3
INFO  15:48:15,790 - #10 )
INFO  15:48:15,790 - #33 *
INFO  15:48:15,790 - #3 3
INFO  15:48:15,791 - #30 -
INFO  15:48:15,791 - #3 1
INFO  15:48:15,791 - #20 ;
INFO  15:48:15,791 - #2 niz
INFO  15:48:15,791 - #13 [
INFO  15:48:15,791 - #2 x
INFO  15:48:15,791 - #14 ]
INFO  15:48:15,791 - #27 =
INFO  15:48:15,791 - #2 p
INFO  15:48:15,791 - #20 ;
INFO  15:48:15,791 - #2 niz
INFO  15:48:15,792 - #13 [
INFO  15:48:15,792 - #2 x
INFO  15:48:15,792 - #31 +
INFO  15:48:15,792 - #3 2
INFO  15:48:15,792 - #30 -
INFO  15:48:15,792 - #9 (
INFO  15:48:15,792 - #3 9
INFO  15:48:15,792 - #34 /
INFO  15:48:15,792 - #3 3
INFO  15:48:15,792 - #10 )
INFO  15:48:15,792 - #33 *
INFO  15:48:15,792 - #2 x
INFO  15:48:15,792 - #14 ]
INFO  15:48:15,792 - #27 =
INFO  15:48:15,792 - #2 x
INFO  15:48:15,792 - #33 *
INFO  15:48:15,792 - #2 p
INFO  15:48:15,792 - #30 -
INFO  15:48:15,792 - #3 4
INFO  15:48:15,793 - #20 ;
INFO  15:48:15,793 - #8 }
INFO  15:48:15,793 - #8 }
INFO  15:48:15,793 - #8 }
INFO  15:48:15,794 - #19 class
INFO  15:48:15,794 - #2 Table
INFO  15:48:15,794 - #12 extends
INFO  15:48:15,794 - #2 Klasa
INFO  15:48:15,794 - #7 {
INFO  15:48:15,794 - #2 Klasa
INFO  15:48:15,794 - #2 n
INFO  15:48:15,794 - #11 ,
INFO  15:48:15,794 - #2 l
INFO  15:48:15,794 - #20 ;
INFO  15:48:15,794 - #2 int
INFO  15:48:15,794 - #2 k
INFO  15:48:15,795 - #20 ;
INFO  15:48:15,795 - #2 int
INFO  15:48:15,795 - #2 pos
INFO  15:48:15,795 - #13 [
INFO  15:48:15,795 - #14 ]
INFO  15:48:15,795 - #11 ,
INFO  15:48:15,795 - #2 neg
INFO  15:48:15,795 - #13 [
INFO  15:48:15,795 - #14 ]
INFO  15:48:15,795 - #20 ;
INFO  15:48:15,795 - #2 Klasa
INFO  15:48:15,795 - #2 ns
INFO  15:48:15,795 - #13 [
INFO  15:48:15,795 - #14 ]
INFO  15:48:15,795 - #20 ;
INFO  15:48:15,795 - #2 char
INFO  15:48:15,795 - #2 chNiz
INFO  15:48:15,795 - #13 [
INFO  15:48:15,795 - #14 ]
INFO  15:48:15,795 - #20 ;
INFO  15:48:15,795 - #7 {
INFO  15:48:15,795 - #2 int
INFO  15:48:15,796 - #2 putp
INFO  15:48:15,796 - #9 (
INFO  15:48:15,796 - #2 int
INFO  15:48:15,796 - #2 a
INFO  15:48:15,796 - #11 ,
INFO  15:48:15,796 - #2 int
INFO  15:48:15,796 - #2 idx
INFO  15:48:15,796 - #10 )
INFO  15:48:15,796 - #7 {
INFO  15:48:15,796 - #2 this
INFO  15:48:15,796 - #15 .
INFO  15:48:15,796 - #2 pos
INFO  15:48:15,796 - #13 [
INFO  15:48:15,796 - #2 idx
INFO  15:48:15,796 - #14 ]
INFO  15:48:15,796 - #27 =
INFO  15:48:15,796 - #2 a
INFO  15:48:15,796 - #20 ;
INFO  15:48:15,796 - #24 continue
INFO  15:48:15,796 - #20 ;
INFO  15:48:15,797 - #42 do
INFO  15:48:15,797 - #7 {
INFO  15:48:15,797 - #2 n
INFO  15:48:15,797 - #27 =
INFO  15:48:15,797 - #2 ns
INFO  15:48:15,797 - #13 [
INFO  15:48:15,798 - #2 k
INFO  15:48:15,798 - #31 +
INFO  15:48:15,798 - #2 pos
INFO  15:48:15,798 - #13 [
INFO  15:48:15,798 - #2 k
INFO  15:48:15,798 - #14 ]
INFO  15:48:15,798 - #14 ]
INFO  15:48:15,798 - #20 ;
INFO  15:48:15,798 - #2 chNiz
INFO  15:48:15,798 - #13 [
INFO  15:48:15,798 - #2 k
INFO  15:48:15,798 - #31 +
INFO  15:48:15,798 - #3 1
INFO  15:48:15,798 - #14 ]
INFO  15:48:15,798 - #17 --
INFO  15:48:15,798 - #20 ;
INFO  15:48:15,798 - #2 neg
INFO  15:48:15,798 - #13 [
INFO  15:48:15,798 - #2 k
INFO  15:48:15,798 - #30 -
INFO  15:48:15,798 - #2 pos
INFO  15:48:15,798 - #13 [
INFO  15:48:15,798 - #2 k
INFO  15:48:15,798 - #31 +
INFO  15:48:15,798 - #2 a
INFO  15:48:15,798 - #33 *
INFO  15:48:15,798 - #2 idx
INFO  15:48:15,798 - #14 ]
INFO  15:48:15,798 - #14 ]
INFO  15:48:15,798 - #16 ++
INFO  15:48:15,798 - #20 ;
INFO  15:48:15,798 - #2 size
INFO  15:48:15,798 - #16 ++
INFO  15:48:15,798 - #20 ;
INFO  15:48:15,799 - #21 if
INFO  15:48:15,799 - #9 (
INFO  15:48:15,799 - #2 a
INFO  15:48:15,799 - #45 &&
INFO  15:48:15,799 - #2 idx
INFO  15:48:15,799 - #10 )
INFO  15:48:15,799 - #2 size
INFO  15:48:15,799 - #27 =
INFO  15:48:15,799 - #2 a
INFO  15:48:15,799 - #31 +
INFO  15:48:15,799 - #2 idx
INFO  15:48:15,799 - #33 *
INFO  15:48:15,799 - #3 3
INFO  15:48:15,799 - #30 -
INFO  15:48:15,799 - #9 (
INFO  15:48:15,799 - #2 a
INFO  15:48:15,799 - #31 +
INFO  15:48:15,799 - #3 2
INFO  15:48:15,800 - #33 *
INFO  15:48:15,800 - #2 k
INFO  15:48:15,800 - #10 )
INFO  15:48:15,800 - #20 ;
INFO  15:48:15,800 - #21 if
INFO  15:48:15,800 - #9 (
INFO  15:48:15,800 - #2 b
INFO  15:48:15,800 - #10 )
INFO  15:48:15,800 - #2 k
INFO  15:48:15,800 - #27 =
INFO  15:48:15,800 - #3 4
INFO  15:48:15,800 - #20 ;
INFO  15:48:15,800 - #21 if
INFO  15:48:15,800 - #9 (
INFO  15:48:15,800 - #2 k
INFO  15:48:15,800 - #40 <
INFO  15:48:15,800 - #2 n
INFO  15:48:15,801 - #10 )
INFO  15:48:15,801 - #23 break
INFO  15:48:15,801 - #20 ;
INFO  15:48:15,801 - #21 if
INFO  15:48:15,801 - #9 (
INFO  15:48:15,801 - #2 k
INFO  15:48:15,801 - #38 >
INFO  15:48:15,801 - #9 (
INFO  15:48:15,802 - #2 idx
INFO  15:48:15,802 - #31 +
INFO  15:48:15,802 - #2 a
INFO  15:48:15,802 - #10 )
INFO  15:48:15,802 - #45 &&
INFO  15:48:15,802 - #2 n
INFO  15:48:15,802 - #38 >
INFO  15:48:15,802 - #2 neg
INFO  15:48:15,802 - #13 [
INFO  15:48:15,802 - #2 k
INFO  15:48:15,802 - #14 ]
INFO  15:48:15,802 - #10 )
INFO  15:48:15,802 - #24 continue
INFO  15:48:15,802 - #20 ;
INFO  15:48:15,802 - #21 if
INFO  15:48:15,802 - #9 (
INFO  15:48:15,802 - #2 n
INFO  15:48:15,802 - #38 >
INFO  15:48:15,802 - #2 l
INFO  15:48:15,802 - #10 )
INFO  15:48:15,802 - #23 break
INFO  15:48:15,802 - #20 ;
INFO  15:48:15,802 - #8 }
INFO  15:48:15,802 - #18 while
INFO  15:48:15,802 - #9 (
INFO  15:48:15,802 - #3 1
INFO  15:48:15,802 - #10 )
INFO  15:48:15,802 - #20 ;
INFO  15:48:15,802 - #25 return
INFO  15:48:15,803 - #2 chNiz
INFO  15:48:15,803 - #13 [
INFO  15:48:15,803 - #2 a
INFO  15:48:15,803 - #14 ]
INFO  15:48:15,803 - #20 ;
INFO  15:48:15,803 - #8 }
INFO  15:48:15,803 - #44 void
INFO  15:48:15,803 - #2 putn
INFO  15:48:15,803 - #9 (
INFO  15:48:15,803 - #2 int
INFO  15:48:15,803 - #2 a
INFO  15:48:15,803 - #11 ,
INFO  15:48:15,803 - #2 char
INFO  15:48:15,803 - #2 b
INFO  15:48:15,803 - #10 )
INFO  15:48:15,803 - #2 Klasa
INFO  15:48:15,803 - #2 kNiz
INFO  15:48:15,803 - #13 [
INFO  15:48:15,803 - #14 ]
INFO  15:48:15,803 - #20 ;
INFO  15:48:15,803 - #7 {
INFO  15:48:15,804 - #2 neg
INFO  15:48:15,804 - #13 [
INFO  15:48:15,804 - #2 b
INFO  15:48:15,804 - #14 ]
INFO  15:48:15,804 - #27 =
INFO  15:48:15,804 - #2 a
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,804 - #2 k
INFO  15:48:15,804 - #13 [
INFO  15:48:15,804 - #2 a
INFO  15:48:15,804 - #14 ]
INFO  15:48:15,804 - #27 =
INFO  15:48:15,804 - #2 a
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,804 - #2 p
INFO  15:48:15,804 - #27 =
INFO  15:48:15,804 - #2 a
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,804 - #2 n
INFO  15:48:15,804 - #27 =
INFO  15:48:15,804 - #32 new
INFO  15:48:15,804 - #2 Klasa
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,804 - #24 continue
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,804 - #2 kNiz
INFO  15:48:15,804 - #27 =
INFO  15:48:15,804 - #32 new
INFO  15:48:15,804 - #2 Klasa
INFO  15:48:15,804 - #13 [
INFO  15:48:15,804 - #2 b
INFO  15:48:15,804 - #14 ]
INFO  15:48:15,804 - #20 ;
INFO  15:48:15,805 - #2 kNiz
INFO  15:48:15,805 - #27 =
INFO  15:48:15,805 - #32 new
INFO  15:48:15,805 - #2 int
INFO  15:48:15,805 - #20 ;
INFO  15:48:15,805 - #2 kNiz
INFO  15:48:15,805 - #27 =
INFO  15:48:15,805 - #32 new
INFO  15:48:15,805 - #2 Table
INFO  15:48:15,805 - #20 ;
INFO  15:48:15,805 - #2 kNiz
INFO  15:48:15,805 - #27 =
INFO  15:48:15,805 - #32 new
INFO  15:48:15,805 - #2 Klasa
INFO  15:48:15,805 - #13 [
INFO  15:48:15,805 - #2 a
INFO  15:48:15,805 - #14 ]
INFO  15:48:15,805 - #20 ;
INFO  15:48:15,805 - #25 return
INFO  15:48:15,805 - #2 n
INFO  15:48:15,805 - #20 ;
INFO  15:48:15,805 - #25 return
INFO  15:48:15,805 - #20 ;
INFO  15:48:15,805 - #8 }
INFO  15:48:15,806 - #44 void
INFO  15:48:15,806 - #2 proba
INFO  15:48:15,806 - #9 (
INFO  15:48:15,806 - #2 Klasa
INFO  15:48:15,806 - #2 p
INFO  15:48:15,806 - #10 )
INFO  15:48:15,806 - #7 {
INFO  15:48:15,806 - #8 }
INFO  15:48:15,806 - #8 }
INFO  15:48:15,806 - #8 }
INFO  15:48:15,806 - #2 Table
INFO  15:48:15,806 - #2 val
INFO  15:48:15,806 - #20 ;
INFO  15:48:15,806 - #7 {
INFO  15:48:15,806 - #44 void
INFO  15:48:15,806 - #2 main
INFO  15:48:15,806 - #9 (
INFO  15:48:15,806 - #10 )
INFO  15:48:15,806 - #2 int
INFO  15:48:15,807 - #2 x
INFO  15:48:15,807 - #11 ,
INFO  15:48:15,807 - #2 i
INFO  15:48:15,807 - #20 ;
INFO  15:48:15,807 - #2 char
INFO  15:48:15,807 - #2 chArr
INFO  15:48:15,807 - #13 [
INFO  15:48:15,807 - #14 ]
INFO  15:48:15,807 - #20 ;
INFO  15:48:15,807 - #2 char
INFO  15:48:15,807 - #2 r
INFO  15:48:15,807 - #20 ;
INFO  15:48:15,807 - #7 {
INFO  15:48:15,807 - #2 x
INFO  15:48:15,807 - #27 =
INFO  15:48:15,807 - #2 size
INFO  15:48:15,807 - #31 +
INFO  15:48:15,807 - #3 1
INFO  15:48:15,807 - #20 ;
INFO  15:48:15,807 - #2 chArr
INFO  15:48:15,807 - #13 [
INFO  15:48:15,807 - #2 x
INFO  15:48:15,807 - #14 ]
INFO  15:48:15,807 - #27 =
INFO  15:48:15,807 - #30 -
INFO  15:48:15,807 - #2 r
INFO  15:48:15,807 - #20 ;
INFO  15:48:15,808 - #2 i
INFO  15:48:15,808 - #27 =
INFO  15:48:15,808 - #2 val
INFO  15:48:15,808 - #15 .
INFO  15:48:15,808 - #2 pos
INFO  15:48:15,808 - #13 [
INFO  15:48:15,808 - #2 x
INFO  15:48:15,808 - #14 ]
INFO  15:48:15,808 - #20 ;
INFO  15:48:15,808 - #2 chArr
INFO  15:48:15,808 - #13 [
INFO  15:48:15,808 - #3 3
INFO  15:48:15,808 - #31 +
INFO  15:48:15,808 - #2 x
INFO  15:48:15,808 - #14 ]
INFO  15:48:15,808 - #27 =
INFO  15:48:15,808 - #2 r
INFO  15:48:15,808 - #31 +
INFO  15:48:15,808 - #2 r
INFO  15:48:15,808 - #34 /
INFO  15:48:15,808 - #2 chArr
INFO  15:48:15,808 - #13 [
INFO  15:48:15,808 - #2 x
INFO  15:48:15,808 - #14 ]
INFO  15:48:15,808 - #20 ;
INFO  15:48:15,808 - #2 chArr
INFO  15:48:15,808 - #13 [
INFO  15:48:15,808 - #3 3
INFO  15:48:15,808 - #31 +
INFO  15:48:15,808 - #2 x
INFO  15:48:15,808 - #14 ]
INFO  15:48:15,808 - #27 =
INFO  15:48:15,808 - #2 r
INFO  15:48:15,808 - #20 ;
INFO  15:48:15,808 - #2 i
INFO  15:48:15,808 - #27 =
INFO  15:48:15,808 - #2 chArr
INFO  15:48:15,808 - #13 [
INFO  15:48:15,808 - #2 i
INFO  15:48:15,808 - #14 ]
INFO  15:48:15,808 - #31 +
INFO  15:48:15,809 - #2 x
INFO  15:48:15,809 - #20 ;
INFO  15:48:15,809 - #2 i
INFO  15:48:15,809 - #27 =
INFO  15:48:15,809 - #2 x
INFO  15:48:15,809 - #31 +
INFO  15:48:15,809 - #2 val
INFO  15:48:15,809 - #15 .
INFO  15:48:15,809 - #2 k
INFO  15:48:15,809 - #13 [
INFO  15:48:15,809 - #2 x
INFO  15:48:15,809 - #14 ]
INFO  15:48:15,809 - #20 ;
INFO  15:48:15,809 - #43 read
INFO  15:48:15,809 - #9 (
INFO  15:48:15,809 - #2 chArr
INFO  15:48:15,809 - #13 [
INFO  15:48:15,809 - #2 x
INFO  15:48:15,809 - #30 -
INFO  15:48:15,809 - #2 i
INFO  15:48:15,809 - #31 +
INFO  15:48:15,809 - #2 size
INFO  15:48:15,809 - #14 ]
INFO  15:48:15,809 - #10 )
INFO  15:48:15,809 - #20 ;
INFO  15:48:15,809 - #43 read
INFO  15:48:15,809 - #9 (
INFO  15:48:15,809 - #2 val
INFO  15:48:15,809 - #10 )
INFO  15:48:15,809 - #20 ;
INFO  15:48:15,809 - #43 read
INFO  15:48:15,809 - #9 (
INFO  15:48:15,809 - #2 size
INFO  15:48:15,809 - #10 )
INFO  15:48:15,809 - #20 ;
INFO  15:48:15,810 - #26 print
INFO  15:48:15,810 - #9 (
INFO  15:48:15,810 - #2 val
INFO  15:48:15,810 - #11 ,
INFO  15:48:15,810 - #3 3
INFO  15:48:15,810 - #10 )
INFO  15:48:15,810 - #20 ;
INFO  15:48:15,810 - #26 print
INFO  15:48:15,810 - #9 (
INFO  15:48:15,810 - #2 size
INFO  15:48:15,810 - #11 ,
INFO  15:48:15,810 - #3 4
INFO  15:48:15,810 - #10 )
INFO  15:48:15,810 - #20 ;
INFO  15:48:15,810 - #8 }
INFO  15:48:15,810 - #2 int
INFO  15:48:15,810 - #2 tt
INFO  15:48:15,810 - #9 (
INFO  15:48:15,810 - #2 int
INFO  15:48:15,810 - #2 a
INFO  15:48:15,810 - #11 ,
INFO  15:48:15,810 - #2 Table
INFO  15:48:15,810 - #2 t
INFO  15:48:15,810 - #10 )
INFO  15:48:15,810 - #2 Klasa
INFO  15:48:15,810 - #2 k
INFO  15:48:15,810 - #20 ;
INFO  15:48:15,810 - #7 {
INFO  15:48:15,810 - #2 a
INFO  15:48:15,811 - #15 .
INFO  15:48:15,811 - #2 putp
INFO  15:48:15,811 - #9 (
INFO  15:48:15,811 - #2 f
INFO  15:48:15,811 - #11 ,
INFO  15:48:15,811 - #2 f
INFO  15:48:15,811 - #10 )
INFO  15:48:15,811 - #20 ;
INFO  15:48:15,811 - #2 t
INFO  15:48:15,811 - #15 .
INFO  15:48:15,811 - #2 putt
INFO  15:48:15,812 - #9 (
INFO  15:48:15,812 - #2 a
INFO  15:48:15,812 - #11 ,
INFO  15:48:15,812 - #2 a
INFO  15:48:15,812 - #10 )
INFO  15:48:15,812 - #20 ;
INFO  15:48:15,812 - #2 t
INFO  15:48:15,812 - #15 .
INFO  15:48:15,812 - #2 putp
INFO  15:48:15,812 - #9 (
INFO  15:48:15,812 - #2 a
INFO  15:48:15,812 - #10 )
INFO  15:48:15,812 - #20 ;
INFO  15:48:15,812 - #2 t
INFO  15:48:15,812 - #15 .
INFO  15:48:15,812 - #2 putn
INFO  15:48:15,812 - #9 (
INFO  15:48:15,812 - #2 a
INFO  15:48:15,812 - #11 ,
INFO  15:48:15,812 - #2 a
INFO  15:48:15,812 - #10 )
INFO  15:48:15,813 - #20 ;
INFO  15:48:15,813 - #2 t
INFO  15:48:15,814 - #15 .
INFO  15:48:15,814 - #2 proba
INFO  15:48:15,814 - #9 (
INFO  15:48:15,814 - #2 null
INFO  15:48:15,814 - #10 )
INFO  15:48:15,814 - #20 ;
INFO  15:48:15,815 - #2 t
INFO  15:48:15,815 - #15 .
INFO  15:48:15,815 - #2 putp
INFO  15:48:15,815 - #9 (
INFO  15:48:15,815 - #2 null
INFO  15:48:15,815 - #11 ,
INFO  15:48:15,815 - #2 null
INFO  15:48:15,815 - #10 )
INFO  15:48:15,815 - #20 ;
INFO  15:48:15,815 - #25 return
INFO  15:48:15,815 - #2 t
INFO  15:48:15,815 - #15 .
INFO  15:48:15,815 - #2 putp
INFO  15:48:15,815 - #9 (
INFO  15:48:15,815 - #2 a
INFO  15:48:15,815 - #11 ,
INFO  15:48:15,815 - #2 a
INFO  15:48:15,815 - #10 )
INFO  15:48:15,815 - #20 ;
INFO  15:48:15,816 - #8 }
INFO  15:48:15,816 - #2 int
INFO  15:48:15,816 - #2 m
INFO  15:48:15,816 - #9 (
INFO  15:48:15,816 - #2 int
INFO  15:48:15,816 - #2 a
INFO  15:48:15,816 - #11 ,
INFO  15:48:15,816 - #2 Table
INFO  15:48:15,816 - #2 b
INFO  15:48:15,816 - #10 )
INFO  15:48:15,816 - #2 char
INFO  15:48:15,816 - #2 c
INFO  15:48:15,816 - #20 ;
INFO  15:48:15,816 - #7 {
INFO  15:48:15,816 - #2 chr
INFO  15:48:15,816 - #9 (
INFO  15:48:15,816 - #2 a
INFO  15:48:15,816 - #10 )
INFO  15:48:15,816 - #20 ;
INFO  15:48:15,816 - #2 chr
INFO  15:48:15,816 - #9 (
INFO  15:48:15,816 - #2 c
INFO  15:48:15,816 - #10 )
INFO  15:48:15,816 - #20 ;
INFO  15:48:15,816 - #2 len
INFO  15:48:15,816 - #9 (
INFO  15:48:15,816 - #2 val
INFO  15:48:15,816 - #15 .
INFO  15:48:15,817 - #2 pos
INFO  15:48:15,817 - #10 )
INFO  15:48:15,817 - #20 ;
INFO  15:48:15,817 - #2 len
INFO  15:48:15,817 - #9 (
INFO  15:48:15,817 - #2 val
INFO  15:48:15,817 - #10 )
INFO  15:48:15,817 - #20 ;
INFO  15:48:15,817 - #2 ord
INFO  15:48:15,817 - #9 (
INFO  15:48:15,817 - #2 c
INFO  15:48:15,817 - #10 )
INFO  15:48:15,817 - #20 ;
INFO  15:48:15,817 - #2 ord
INFO  15:48:15,817 - #9 (
INFO  15:48:15,817 - #2 c
INFO  15:48:15,817 - #11 ,
INFO  15:48:15,817 - #2 a
INFO  15:48:15,817 - #10 )
INFO  15:48:15,817 - #20 ;
INFO  15:48:15,817 - #2 tt
INFO  15:48:15,817 - #9 (
INFO  15:48:15,817 - #2 a
INFO  15:48:15,817 - #11 ,
INFO  15:48:15,817 - #2 a
INFO  15:48:15,817 - #10 )
INFO  15:48:15,817 - #20 ;
INFO  15:48:15,817 - #2 b
INFO  15:48:15,817 - #15 .
INFO  15:48:15,817 - #2 n
INFO  15:48:15,817 - #15 .
INFO  15:48:15,817 - #2 metoda1
INFO  15:48:15,817 - #9 (
INFO  15:48:15,817 - #2 a
INFO  15:48:15,817 - #11 ,
INFO  15:48:15,818 - #2 c
INFO  15:48:15,818 - #10 )
INFO  15:48:15,818 - #20 ;
INFO  15:48:15,818 - #2 b
INFO  15:48:15,818 - #15 .
INFO  15:48:15,818 - #2 n
INFO  15:48:15,818 - #15 .
INFO  15:48:15,818 - #2 metoda1
INFO  15:48:15,818 - #9 (
INFO  15:48:15,818 - #2 b
INFO  15:48:15,818 - #11 ,
INFO  15:48:15,818 - #2 c
INFO  15:48:15,818 - #10 )
INFO  15:48:15,818 - #20 ;
INFO  15:48:15,818 - #8 }
INFO  15:48:15,818 - #8 }
INFO  15:48:15,828 - Deklarisana simbolicka konstanta <size>: na liniji 2
ERROR 15:48:15,828 - Greska prilikom dodele vrednosti promenljivoj <si>, tipovi se ne poklapaju: na liniji 3
INFO  15:48:15,828 - Deklarisana simbolicka konstanta <b>: na liniji 4
INFO  15:48:15,828 - Deklarisana globalna promenljiva <f>: na liniji 5
INFO  15:48:15,829 - Deklarisana klasa <Klasa>: na liniji 6
ERROR 15:48:15,829 - Klasa ne moze nasledjivati tipa <int>, jer nije klasni: na liniji 6
INFO  15:48:15,829 - Deklarisano polje klase, niz <niz>: na liniji 7
INFO  15:48:15,829 - Obrada metode <metoda1>: na liniji 9
INFO  15:48:15,829 - Pristup simbolu <niz>: na liniji 11
INFO  15:48:34,260 - Pristup elementu niza <niz>: na liniji 11
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 11
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 11
INFO  15:48:34,260 - Pristup simbolu <niz>: na liniji 12
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 12
INFO  15:48:34,260 - Pristup elementu niza <niz>: na liniji 12
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <p>: na liniji 12
ERROR 15:48:34,260 - Greska, nekompatibilni tipovi u izrazu dodele!: na liniji 12
INFO  15:48:34,260 - Pristup simbolu <niz>: na liniji 13
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  15:48:34,260 - Pristup elementu niza <niz>: na liniji 13
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  15:48:34,260 - Koriscenje formalnog argumenta funkcije <p>: na liniji 13
ERROR 15:48:34,260 - Greska, operatori se moraju slagati po tipu!: na liniji 13
ERROR 15:48:34,260 - Nekompatibilni operatori!: na liniji 13
ERROR 15:48:34,260 - Greska, nekompatibilni tipovi u izrazu dodele!: na liniji 13
