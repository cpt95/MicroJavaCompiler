INFO  16:26:14,898 - Compiling source file: D:\Fakultet\PP1\workspace\MJCompiler\test\program.mj
INFO  16:26:14,930 - #6 program
INFO  16:26:14,930 - #2 P
INFO  16:26:14,930 - #28 const
INFO  16:26:14,931 - #2 int
INFO  16:26:14,931 - #2 size
INFO  16:26:14,931 - #27 =
INFO  16:26:14,932 - #3 10
INFO  16:26:14,932 - #20 ;
INFO  16:26:14,932 - #28 const
INFO  16:26:14,932 - #2 int
INFO  16:26:14,932 - #2 si
INFO  16:26:14,932 - #27 =
INFO  16:26:14,933 - #5 t
INFO  16:26:14,933 - #20 ;
INFO  16:26:14,933 - #28 const
INFO  16:26:14,933 - #2 bool
INFO  16:26:14,933 - #2 b
INFO  16:26:14,933 - #27 =
INFO  16:26:14,933 - #4 false
INFO  16:26:14,933 - #20 ;
INFO  16:26:14,933 - #2 int
INFO  16:26:14,933 - #2 f
INFO  16:26:14,933 - #20 ;
INFO  16:26:14,934 - #19 class
INFO  16:26:14,934 - #2 Klasa
INFO  16:26:14,934 - #12 extends
INFO  16:26:14,934 - #2 int
INFO  16:26:14,934 - #7 {
INFO  16:26:14,934 - #2 int
INFO  16:26:14,935 - #2 niz
INFO  16:26:14,935 - #13 [
INFO  16:26:14,935 - #14 ]
INFO  16:26:14,935 - #20 ;
INFO  16:26:14,935 - #7 {
INFO  16:26:14,935 - #44 void
INFO  16:26:14,935 - #2 metoda1
INFO  16:26:14,935 - #9 (
INFO  16:26:14,935 - #2 int
INFO  16:26:14,935 - #2 x
INFO  16:26:14,935 - #11 ,
INFO  16:26:14,936 - #2 char
INFO  16:26:14,936 - #2 p
INFO  16:26:14,936 - #10 )
INFO  16:26:14,936 - #7 {
INFO  16:26:14,936 - #2 niz
INFO  16:26:14,936 - #13 [
INFO  16:26:14,937 - #3 2
INFO  16:26:14,937 - #14 ]
INFO  16:26:14,937 - #27 =
INFO  16:26:14,938 - #3 2
INFO  16:26:14,938 - #33 *
INFO  16:26:14,938 - #2 x
INFO  16:26:14,938 - #30 -
INFO  16:26:14,939 - #9 (
INFO  16:26:14,939 - #2 x
INFO  16:26:14,939 - #34 /
INFO  16:26:14,939 - #3 3
INFO  16:26:14,939 - #10 )
INFO  16:26:14,940 - #33 *
INFO  16:26:14,940 - #3 3
INFO  16:26:14,940 - #30 -
INFO  16:26:14,940 - #3 1
INFO  16:26:14,940 - #20 ;
INFO  16:26:14,941 - #2 niz
INFO  16:26:14,941 - #13 [
INFO  16:26:14,941 - #2 x
INFO  16:26:14,941 - #14 ]
INFO  16:26:14,941 - #27 =
INFO  16:26:14,941 - #2 p
INFO  16:26:14,941 - #20 ;
INFO  16:26:14,941 - #2 niz
INFO  16:26:14,941 - #13 [
INFO  16:26:14,941 - #2 x
INFO  16:26:14,941 - #31 +
INFO  16:26:14,941 - #3 2
INFO  16:26:14,941 - #30 -
INFO  16:26:14,942 - #9 (
INFO  16:26:14,942 - #3 9
INFO  16:26:14,942 - #34 /
INFO  16:26:14,942 - #3 3
INFO  16:26:14,942 - #10 )
INFO  16:26:14,942 - #33 *
INFO  16:26:14,942 - #2 x
INFO  16:26:14,942 - #14 ]
INFO  16:26:14,942 - #27 =
INFO  16:26:14,942 - #2 x
INFO  16:26:14,942 - #33 *
INFO  16:26:14,942 - #2 p
INFO  16:26:14,942 - #30 -
INFO  16:26:14,942 - #3 4
INFO  16:26:14,942 - #20 ;
INFO  16:26:14,942 - #8 }
INFO  16:26:14,942 - #8 }
INFO  16:26:14,943 - #8 }
INFO  16:26:14,943 - #19 class
INFO  16:26:14,943 - #2 Table
INFO  16:26:14,944 - #12 extends
INFO  16:26:14,944 - #2 Klasa
INFO  16:26:14,944 - #7 {
INFO  16:26:14,944 - #2 Klasa
INFO  16:26:14,944 - #2 n
INFO  16:26:14,944 - #11 ,
INFO  16:26:14,944 - #2 l
INFO  16:26:14,944 - #20 ;
INFO  16:26:14,944 - #2 int
INFO  16:26:14,944 - #2 k
INFO  16:26:14,944 - #20 ;
INFO  16:26:14,944 - #2 int
INFO  16:26:14,944 - #2 pos
INFO  16:26:14,944 - #13 [
INFO  16:26:14,944 - #14 ]
INFO  16:26:14,944 - #11 ,
INFO  16:26:14,944 - #2 neg
INFO  16:26:14,944 - #13 [
INFO  16:26:14,944 - #14 ]
INFO  16:26:14,944 - #20 ;
INFO  16:26:14,944 - #2 Klasa
INFO  16:26:14,944 - #2 ns
INFO  16:26:14,944 - #13 [
INFO  16:26:14,944 - #14 ]
INFO  16:26:14,944 - #20 ;
INFO  16:26:14,944 - #2 char
INFO  16:26:14,944 - #2 chNiz
INFO  16:26:14,944 - #13 [
INFO  16:26:14,945 - #14 ]
INFO  16:26:14,945 - #20 ;
INFO  16:26:14,945 - #7 {
INFO  16:26:14,945 - #2 int
INFO  16:26:14,945 - #2 putp
INFO  16:26:14,945 - #9 (
INFO  16:26:14,945 - #2 int
INFO  16:26:14,945 - #2 a
INFO  16:26:14,945 - #11 ,
INFO  16:26:14,945 - #2 int
INFO  16:26:14,945 - #2 idx
INFO  16:26:14,945 - #10 )
INFO  16:26:14,945 - #7 {
INFO  16:26:14,945 - #2 this
INFO  16:26:14,945 - #15 .
INFO  16:26:14,945 - #2 pos
INFO  16:26:14,945 - #13 [
INFO  16:26:14,945 - #2 idx
INFO  16:26:14,945 - #14 ]
INFO  16:26:14,945 - #27 =
INFO  16:26:14,945 - #2 a
INFO  16:26:14,945 - #20 ;
INFO  16:26:14,945 - #24 continue
INFO  16:26:14,945 - #20 ;
INFO  16:26:14,946 - #42 do
INFO  16:26:14,946 - #7 {
INFO  16:26:14,946 - #2 n
INFO  16:26:14,946 - #27 =
INFO  16:26:14,946 - #2 ns
INFO  16:26:14,946 - #13 [
INFO  16:26:14,946 - #2 k
INFO  16:26:14,946 - #31 +
INFO  16:26:14,946 - #2 pos
INFO  16:26:14,946 - #13 [
INFO  16:26:14,946 - #2 k
INFO  16:26:14,946 - #14 ]
INFO  16:26:14,946 - #14 ]
INFO  16:26:14,947 - #20 ;
INFO  16:26:14,947 - #2 chNiz
INFO  16:26:14,947 - #13 [
INFO  16:26:14,947 - #2 k
INFO  16:26:14,947 - #31 +
INFO  16:26:14,947 - #3 1
INFO  16:26:14,947 - #14 ]
INFO  16:26:14,947 - #17 --
INFO  16:26:14,947 - #20 ;
INFO  16:26:14,947 - #2 neg
INFO  16:26:14,947 - #13 [
INFO  16:26:14,947 - #2 k
INFO  16:26:14,947 - #30 -
INFO  16:26:14,947 - #2 pos
INFO  16:26:14,947 - #13 [
INFO  16:26:14,947 - #2 k
INFO  16:26:14,947 - #31 +
INFO  16:26:14,947 - #2 a
INFO  16:26:14,947 - #33 *
INFO  16:26:14,947 - #2 idx
INFO  16:26:14,947 - #14 ]
INFO  16:26:14,947 - #14 ]
INFO  16:26:14,947 - #16 ++
INFO  16:26:14,947 - #20 ;
INFO  16:26:14,947 - #2 size
INFO  16:26:14,947 - #16 ++
INFO  16:26:14,947 - #20 ;
INFO  16:26:14,947 - #21 if
INFO  16:26:14,947 - #9 (
INFO  16:26:14,947 - #2 a
INFO  16:26:14,947 - #45 &&
INFO  16:26:14,948 - #2 idx
INFO  16:26:14,948 - #10 )
INFO  16:26:14,948 - #2 size
INFO  16:26:14,948 - #27 =
INFO  16:26:14,948 - #2 a
INFO  16:26:14,948 - #31 +
INFO  16:26:14,948 - #2 idx
INFO  16:26:14,948 - #33 *
INFO  16:26:14,948 - #3 3
INFO  16:26:14,948 - #30 -
INFO  16:26:14,948 - #9 (
INFO  16:26:14,948 - #2 a
INFO  16:26:14,948 - #31 +
INFO  16:26:14,948 - #3 2
INFO  16:26:14,948 - #33 *
INFO  16:26:14,948 - #2 k
INFO  16:26:14,948 - #10 )
INFO  16:26:14,948 - #20 ;
INFO  16:26:14,948 - #21 if
INFO  16:26:14,948 - #9 (
INFO  16:26:14,948 - #2 b
INFO  16:26:14,948 - #10 )
INFO  16:26:14,948 - #2 k
INFO  16:26:14,948 - #27 =
INFO  16:26:14,948 - #3 4
INFO  16:26:14,948 - #20 ;
INFO  16:26:14,949 - #21 if
INFO  16:26:14,949 - #9 (
INFO  16:26:14,949 - #2 k
INFO  16:26:14,949 - #40 <
INFO  16:26:14,949 - #2 n
INFO  16:26:14,949 - #10 )
INFO  16:26:14,949 - #23 break
INFO  16:26:14,949 - #20 ;
INFO  16:26:14,949 - #21 if
INFO  16:26:14,950 - #9 (
INFO  16:26:14,950 - #2 k
INFO  16:26:14,950 - #38 >
INFO  16:26:14,950 - #9 (
INFO  16:26:14,950 - #2 idx
INFO  16:26:14,950 - #31 +
INFO  16:26:14,950 - #2 a
INFO  16:26:14,950 - #10 )
INFO  16:26:14,950 - #45 &&
INFO  16:26:14,950 - #2 n
INFO  16:26:14,950 - #38 >
INFO  16:26:14,950 - #2 neg
INFO  16:26:14,950 - #13 [
INFO  16:26:14,950 - #2 k
INFO  16:26:14,950 - #14 ]
INFO  16:26:14,950 - #10 )
INFO  16:26:14,950 - #24 continue
INFO  16:26:14,950 - #20 ;
INFO  16:26:14,950 - #21 if
INFO  16:26:14,951 - #9 (
INFO  16:26:14,951 - #2 n
INFO  16:26:14,951 - #38 >
INFO  16:26:14,951 - #2 l
INFO  16:26:14,951 - #10 )
INFO  16:26:14,952 - #23 break
INFO  16:26:14,952 - #20 ;
INFO  16:26:14,952 - #8 }
INFO  16:26:14,952 - #18 while
INFO  16:26:14,953 - #9 (
INFO  16:26:14,953 - #3 1
INFO  16:26:14,953 - #10 )
INFO  16:26:14,953 - #20 ;
INFO  16:26:14,953 - #25 return
INFO  16:26:14,953 - #2 chNiz
INFO  16:26:14,953 - #13 [
INFO  16:26:14,953 - #2 a
INFO  16:26:14,953 - #14 ]
INFO  16:26:14,953 - #20 ;
INFO  16:26:14,953 - #8 }
INFO  16:26:14,953 - #44 void
INFO  16:26:14,953 - #2 putn
INFO  16:26:14,953 - #9 (
INFO  16:26:14,953 - #2 int
INFO  16:26:14,953 - #2 a
INFO  16:26:14,953 - #11 ,
INFO  16:26:14,953 - #2 char
INFO  16:26:14,953 - #2 b
INFO  16:26:14,953 - #10 )
INFO  16:26:14,953 - #2 Klasa
INFO  16:26:14,953 - #2 kNiz
INFO  16:26:14,953 - #13 [
INFO  16:26:14,954 - #14 ]
INFO  16:26:14,954 - #20 ;
INFO  16:26:14,954 - #7 {
INFO  16:26:14,954 - #2 neg
INFO  16:26:14,954 - #13 [
INFO  16:26:14,954 - #2 b
INFO  16:26:14,954 - #14 ]
INFO  16:26:14,954 - #27 =
INFO  16:26:14,954 - #2 a
INFO  16:26:14,954 - #20 ;
INFO  16:26:14,954 - #2 k
INFO  16:26:14,954 - #13 [
INFO  16:26:14,954 - #2 a
INFO  16:26:14,954 - #14 ]
INFO  16:26:14,954 - #27 =
INFO  16:26:14,954 - #2 a
INFO  16:26:14,954 - #20 ;
INFO  16:26:14,954 - #2 p
INFO  16:26:14,954 - #27 =
INFO  16:26:14,954 - #2 a
INFO  16:26:14,954 - #20 ;
INFO  16:26:14,954 - #2 n
INFO  16:26:14,954 - #27 =
INFO  16:26:14,954 - #32 new
INFO  16:26:14,954 - #2 Klasa
INFO  16:26:14,954 - #20 ;
INFO  16:26:14,955 - #24 continue
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #2 kNiz
INFO  16:26:14,955 - #27 =
INFO  16:26:14,955 - #32 new
INFO  16:26:14,955 - #2 Klasa
INFO  16:26:14,955 - #13 [
INFO  16:26:14,955 - #2 b
INFO  16:26:14,955 - #14 ]
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #2 kNiz
INFO  16:26:14,955 - #27 =
INFO  16:26:14,955 - #32 new
INFO  16:26:14,955 - #2 int
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #2 kNiz
INFO  16:26:14,955 - #27 =
INFO  16:26:14,955 - #32 new
INFO  16:26:14,955 - #2 Table
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #2 kNiz
INFO  16:26:14,955 - #27 =
INFO  16:26:14,955 - #32 new
INFO  16:26:14,955 - #2 Klasa
INFO  16:26:14,955 - #13 [
INFO  16:26:14,955 - #2 a
INFO  16:26:14,955 - #14 ]
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #25 return
INFO  16:26:14,955 - #2 n
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #25 return
INFO  16:26:14,955 - #20 ;
INFO  16:26:14,955 - #8 }
INFO  16:26:14,956 - #44 void
INFO  16:26:14,956 - #2 proba
INFO  16:26:14,956 - #9 (
INFO  16:26:14,956 - #2 Klasa
INFO  16:26:14,956 - #2 p
INFO  16:26:14,956 - #10 )
INFO  16:26:14,956 - #7 {
INFO  16:26:14,956 - #8 }
INFO  16:26:14,956 - #8 }
INFO  16:26:14,956 - #8 }
INFO  16:26:14,956 - #2 Table
INFO  16:26:14,956 - #2 val
INFO  16:26:14,956 - #20 ;
INFO  16:26:14,956 - #7 {
INFO  16:26:14,956 - #44 void
INFO  16:26:14,956 - #2 main
INFO  16:26:14,956 - #9 (
INFO  16:26:14,956 - #10 )
INFO  16:26:14,956 - #2 int
INFO  16:26:14,956 - #2 x
INFO  16:26:14,956 - #11 ,
INFO  16:26:14,957 - #2 i
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #2 char
INFO  16:26:14,957 - #2 chArr
INFO  16:26:14,957 - #13 [
INFO  16:26:14,957 - #14 ]
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #2 char
INFO  16:26:14,957 - #2 r
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #7 {
INFO  16:26:14,957 - #2 x
INFO  16:26:14,957 - #27 =
INFO  16:26:14,957 - #2 size
INFO  16:26:14,957 - #31 +
INFO  16:26:14,957 - #3 1
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #2 chArr
INFO  16:26:14,957 - #13 [
INFO  16:26:14,957 - #2 x
INFO  16:26:14,957 - #14 ]
INFO  16:26:14,957 - #27 =
INFO  16:26:14,957 - #30 -
INFO  16:26:14,957 - #2 r
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #2 i
INFO  16:26:14,957 - #27 =
INFO  16:26:14,957 - #2 val
INFO  16:26:14,957 - #15 .
INFO  16:26:14,957 - #2 pos
INFO  16:26:14,957 - #13 [
INFO  16:26:14,957 - #2 x
INFO  16:26:14,957 - #14 ]
INFO  16:26:14,957 - #20 ;
INFO  16:26:14,957 - #2 chArr
INFO  16:26:14,957 - #13 [
INFO  16:26:14,957 - #3 3
INFO  16:26:14,957 - #31 +
INFO  16:26:14,957 - #2 x
INFO  16:26:14,957 - #14 ]
INFO  16:26:14,958 - #27 =
INFO  16:26:14,958 - #2 r
INFO  16:26:14,958 - #31 +
INFO  16:26:14,958 - #2 r
INFO  16:26:14,958 - #34 /
INFO  16:26:14,958 - #2 chArr
INFO  16:26:14,958 - #13 [
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #14 ]
INFO  16:26:14,958 - #20 ;
INFO  16:26:14,958 - #2 chArr
INFO  16:26:14,958 - #13 [
INFO  16:26:14,958 - #3 3
INFO  16:26:14,958 - #31 +
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #14 ]
INFO  16:26:14,958 - #27 =
INFO  16:26:14,958 - #2 r
INFO  16:26:14,958 - #20 ;
INFO  16:26:14,958 - #2 i
INFO  16:26:14,958 - #27 =
INFO  16:26:14,958 - #2 chArr
INFO  16:26:14,958 - #13 [
INFO  16:26:14,958 - #2 i
INFO  16:26:14,958 - #14 ]
INFO  16:26:14,958 - #31 +
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #20 ;
INFO  16:26:14,958 - #2 i
INFO  16:26:14,958 - #27 =
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #31 +
INFO  16:26:14,958 - #2 val
INFO  16:26:14,958 - #15 .
INFO  16:26:14,958 - #2 k
INFO  16:26:14,958 - #13 [
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #14 ]
INFO  16:26:14,958 - #20 ;
INFO  16:26:14,958 - #43 read
INFO  16:26:14,958 - #9 (
INFO  16:26:14,958 - #2 chArr
INFO  16:26:14,958 - #13 [
INFO  16:26:14,958 - #2 x
INFO  16:26:14,958 - #30 -
INFO  16:26:14,958 - #2 i
INFO  16:26:14,958 - #31 +
INFO  16:26:14,958 - #2 size
INFO  16:26:14,958 - #14 ]
INFO  16:26:14,958 - #10 )
INFO  16:26:14,958 - #20 ;
INFO  16:26:14,958 - #43 read
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 val
INFO  16:26:14,959 - #10 )
INFO  16:26:14,959 - #20 ;
INFO  16:26:14,959 - #43 read
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 size
INFO  16:26:14,959 - #10 )
INFO  16:26:14,959 - #20 ;
INFO  16:26:14,959 - #26 print
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 val
INFO  16:26:14,959 - #11 ,
INFO  16:26:14,959 - #3 3
INFO  16:26:14,959 - #10 )
INFO  16:26:14,959 - #20 ;
INFO  16:26:14,959 - #26 print
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 size
INFO  16:26:14,959 - #11 ,
INFO  16:26:14,959 - #3 4
INFO  16:26:14,959 - #10 )
INFO  16:26:14,959 - #20 ;
INFO  16:26:14,959 - #8 }
INFO  16:26:14,959 - #2 int
INFO  16:26:14,959 - #2 tt
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 int
INFO  16:26:14,959 - #2 a
INFO  16:26:14,959 - #11 ,
INFO  16:26:14,959 - #2 Table
INFO  16:26:14,959 - #2 t
INFO  16:26:14,959 - #10 )
INFO  16:26:14,959 - #2 Klasa
INFO  16:26:14,959 - #2 k
INFO  16:26:14,959 - #20 ;
INFO  16:26:14,959 - #7 {
INFO  16:26:14,959 - #2 a
INFO  16:26:14,959 - #15 .
INFO  16:26:14,959 - #2 putp
INFO  16:26:14,959 - #9 (
INFO  16:26:14,959 - #2 f
INFO  16:26:14,959 - #11 ,
INFO  16:26:14,959 - #2 f
INFO  16:26:14,959 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,960 - #2 t
INFO  16:26:14,960 - #15 .
INFO  16:26:14,960 - #2 putt
INFO  16:26:14,960 - #9 (
INFO  16:26:14,960 - #2 a
INFO  16:26:14,960 - #11 ,
INFO  16:26:14,960 - #2 a
INFO  16:26:14,960 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,960 - #2 t
INFO  16:26:14,960 - #15 .
INFO  16:26:14,960 - #2 putp
INFO  16:26:14,960 - #9 (
INFO  16:26:14,960 - #2 a
INFO  16:26:14,960 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,960 - #2 t
INFO  16:26:14,960 - #15 .
INFO  16:26:14,960 - #2 putn
INFO  16:26:14,960 - #9 (
INFO  16:26:14,960 - #2 a
INFO  16:26:14,960 - #11 ,
INFO  16:26:14,960 - #2 a
INFO  16:26:14,960 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,960 - #2 t
INFO  16:26:14,960 - #15 .
INFO  16:26:14,960 - #2 proba
INFO  16:26:14,960 - #9 (
INFO  16:26:14,960 - #2 null
INFO  16:26:14,960 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,960 - #2 t
INFO  16:26:14,960 - #15 .
INFO  16:26:14,960 - #2 putp
INFO  16:26:14,960 - #9 (
INFO  16:26:14,960 - #2 null
INFO  16:26:14,960 - #11 ,
INFO  16:26:14,960 - #2 null
INFO  16:26:14,960 - #10 )
INFO  16:26:14,960 - #20 ;
INFO  16:26:14,961 - #25 return
INFO  16:26:14,961 - #2 t
INFO  16:26:14,961 - #15 .
INFO  16:26:14,961 - #2 putp
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 a
INFO  16:26:14,961 - #11 ,
INFO  16:26:14,961 - #2 a
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #8 }
INFO  16:26:14,961 - #2 int
INFO  16:26:14,961 - #2 m
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 int
INFO  16:26:14,961 - #2 a
INFO  16:26:14,961 - #11 ,
INFO  16:26:14,961 - #2 Table
INFO  16:26:14,961 - #2 b
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #2 char
INFO  16:26:14,961 - #2 c
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #7 {
INFO  16:26:14,961 - #2 chr
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 a
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #2 chr
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 c
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #2 len
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 val
INFO  16:26:14,961 - #15 .
INFO  16:26:14,961 - #2 pos
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #2 len
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 val
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,961 - #2 ord
INFO  16:26:14,961 - #9 (
INFO  16:26:14,961 - #2 c
INFO  16:26:14,961 - #10 )
INFO  16:26:14,961 - #20 ;
INFO  16:26:14,962 - #2 ord
INFO  16:26:14,962 - #9 (
INFO  16:26:14,962 - #2 c
INFO  16:26:14,962 - #11 ,
INFO  16:26:14,962 - #2 a
INFO  16:26:14,962 - #10 )
INFO  16:26:14,962 - #20 ;
INFO  16:26:14,962 - #2 tt
INFO  16:26:14,962 - #9 (
INFO  16:26:14,962 - #2 a
INFO  16:26:14,962 - #11 ,
INFO  16:26:14,962 - #2 a
INFO  16:26:14,962 - #10 )
INFO  16:26:14,962 - #20 ;
INFO  16:26:14,962 - #2 b
INFO  16:26:14,962 - #15 .
INFO  16:26:14,962 - #2 n
INFO  16:26:14,962 - #15 .
INFO  16:26:14,962 - #2 metoda1
INFO  16:26:14,962 - #9 (
INFO  16:26:14,962 - #2 a
INFO  16:26:14,962 - #11 ,
INFO  16:26:14,962 - #2 c
INFO  16:26:14,962 - #10 )
INFO  16:26:14,962 - #20 ;
INFO  16:26:14,962 - #2 b
INFO  16:26:14,962 - #15 .
INFO  16:26:14,962 - #2 n
INFO  16:26:14,962 - #15 .
INFO  16:26:14,962 - #2 metoda1
INFO  16:26:14,962 - #9 (
INFO  16:26:14,962 - #2 b
INFO  16:26:14,962 - #11 ,
INFO  16:26:14,962 - #2 c
INFO  16:26:14,962 - #10 )
INFO  16:26:14,962 - #20 ;
INFO  16:26:14,962 - #8 }
INFO  16:26:14,962 - #8 }
INFO  16:26:14,973 - Deklarisana simbolicka konstanta <size>: na liniji 2
ERROR 16:26:14,974 - Greska prilikom dodele vrednosti promenljivoj <si>, tipovi se ne poklapaju: na liniji 3
INFO  16:26:14,974 - Deklarisana simbolicka konstanta <b>: na liniji 4
INFO  16:26:14,974 - Deklarisana globalna promenljiva <f>: na liniji 5
INFO  16:26:14,974 - Deklarisana klasa <Klasa>: na liniji 6
ERROR 16:26:14,974 - Klasa ne moze nasledjivati tipa <int>, jer nije klasni: na liniji 6
INFO  16:26:14,974 - Deklarisano polje klase, niz <niz>: na liniji 7
INFO  16:26:14,974 - Obrada metode <metoda1>: na liniji 9
INFO  16:26:14,974 - Pristup simbolu <niz>: na liniji 11
INFO  16:26:22,062 - Pristup elementu niza <niz>: na liniji 11
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 11
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 11
INFO  16:26:22,062 - Pristup simbolu <niz>: na liniji 12
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 12
INFO  16:26:22,062 - Pristup elementu niza <niz>: na liniji 12
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <p>: na liniji 12
ERROR 16:26:22,062 - Greska, nekompatibilni tipovi u izrazu dodele!: na liniji 12
INFO  16:26:22,062 - Pristup simbolu <niz>: na liniji 13
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  16:26:22,062 - Pristup elementu niza <niz>: na liniji 13
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <x>: na liniji 13
INFO  16:26:22,062 - Koriscenje formalnog argumenta funkcije <p>: na liniji 13
ERROR 16:26:22,062 - Greska, operatori se moraju slagati po tipu!: na liniji 13
ERROR 16:26:22,062 - Nekompatibilni operatori!: na liniji 13
ERROR 16:26:22,062 - Greska, nekompatibilni tipovi u izrazu dodele!: na liniji 13
