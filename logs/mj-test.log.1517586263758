INFO  16:44:09,012 - Compiling source file: D:\Fakultet\PP1\workspace\MJCompiler\test\program.mj
INFO  16:44:09,040 - #6 program
INFO  16:44:09,040 - #2 P
INFO  16:44:09,040 - #28 const
INFO  16:44:09,041 - #2 int
INFO  16:44:09,041 - #2 size
INFO  16:44:09,041 - #27 =
INFO  16:44:09,041 - #3 10
INFO  16:44:09,041 - #20 ;
INFO  16:44:09,042 - #28 const
INFO  16:44:09,042 - #2 int
INFO  16:44:09,042 - #2 si
INFO  16:44:09,042 - #27 =
INFO  16:44:09,042 - #5 t
INFO  16:44:09,042 - #20 ;
INFO  16:44:09,043 - #28 const
INFO  16:44:09,043 - #2 bool
INFO  16:44:09,043 - #2 b
INFO  16:44:09,043 - #27 =
INFO  16:44:09,043 - #4 false
INFO  16:44:09,043 - #20 ;
INFO  16:44:09,043 - #2 int
INFO  16:44:09,043 - #2 f
INFO  16:44:09,044 - #20 ;
INFO  16:44:09,044 - #19 class
INFO  16:44:09,044 - #2 Klasa
INFO  16:44:09,044 - #12 extends
INFO  16:44:09,044 - #2 int
INFO  16:44:09,044 - #7 {
INFO  16:44:09,044 - #2 int
INFO  16:44:09,045 - #2 niz
INFO  16:44:09,045 - #13 [
INFO  16:44:09,045 - #14 ]
INFO  16:44:09,045 - #20 ;
INFO  16:44:09,045 - #7 {
INFO  16:44:09,045 - #44 void
INFO  16:44:09,045 - #2 metoda1
INFO  16:44:09,045 - #9 (
INFO  16:44:09,045 - #2 int
INFO  16:44:09,045 - #2 x
INFO  16:44:09,045 - #11 ,
INFO  16:44:09,045 - #2 char
INFO  16:44:09,046 - #2 p
INFO  16:44:09,046 - #10 )
INFO  16:44:09,046 - #7 {
INFO  16:44:09,046 - #2 niz
INFO  16:44:09,046 - #13 [
INFO  16:44:09,046 - #3 2
INFO  16:44:09,047 - #14 ]
INFO  16:44:09,047 - #27 =
INFO  16:44:09,047 - #3 2
INFO  16:44:09,048 - #33 *
INFO  16:44:09,048 - #2 x
INFO  16:44:09,048 - #30 -
INFO  16:44:09,048 - #9 (
INFO  16:44:09,049 - #2 x
INFO  16:44:09,049 - #34 /
INFO  16:44:09,049 - #3 3
INFO  16:44:09,049 - #10 )
INFO  16:44:09,049 - #33 *
INFO  16:44:09,050 - #3 3
INFO  16:44:09,050 - #30 -
INFO  16:44:09,050 - #3 1
INFO  16:44:09,050 - #20 ;
INFO  16:44:09,050 - #2 niz
INFO  16:44:09,050 - #13 [
INFO  16:44:09,050 - #2 x
INFO  16:44:09,050 - #14 ]
INFO  16:44:09,050 - #27 =
INFO  16:44:09,050 - #2 p
INFO  16:44:09,050 - #20 ;
INFO  16:44:09,050 - #2 niz
INFO  16:44:09,050 - #13 [
INFO  16:44:09,051 - #2 x
INFO  16:44:09,051 - #31 +
INFO  16:44:09,051 - #3 2
INFO  16:44:09,051 - #30 -
INFO  16:44:09,051 - #9 (
INFO  16:44:09,051 - #3 9
INFO  16:44:09,051 - #34 /
INFO  16:44:09,051 - #3 3
INFO  16:44:09,051 - #10 )
INFO  16:44:09,051 - #33 *
INFO  16:44:09,051 - #2 x
INFO  16:44:09,051 - #14 ]
INFO  16:44:09,051 - #27 =
INFO  16:44:09,051 - #2 x
INFO  16:44:09,051 - #33 *
INFO  16:44:09,051 - #2 p
INFO  16:44:09,051 - #30 -
INFO  16:44:09,051 - #3 4
INFO  16:44:09,051 - #20 ;
INFO  16:44:09,051 - #8 }
INFO  16:44:09,052 - #8 }
INFO  16:44:09,052 - #8 }
INFO  16:44:09,052 - #19 class
INFO  16:44:09,053 - #2 Table
INFO  16:44:09,053 - #12 extends
INFO  16:44:09,053 - #2 Klasa
INFO  16:44:09,053 - #7 {
INFO  16:44:09,053 - #2 Klasa
INFO  16:44:09,053 - #2 n
INFO  16:44:09,053 - #11 ,
INFO  16:44:09,053 - #2 l
INFO  16:44:09,053 - #20 ;
INFO  16:44:09,053 - #2 int
INFO  16:44:09,053 - #2 k
INFO  16:44:09,053 - #20 ;
INFO  16:44:09,053 - #2 int
INFO  16:44:09,053 - #2 pos
INFO  16:44:09,053 - #13 [
INFO  16:44:09,053 - #14 ]
INFO  16:44:09,053 - #11 ,
INFO  16:44:09,053 - #2 neg
INFO  16:44:09,053 - #13 [
INFO  16:44:09,053 - #14 ]
INFO  16:44:09,053 - #20 ;
INFO  16:44:09,053 - #2 Klasa
INFO  16:44:09,053 - #2 ns
INFO  16:44:09,053 - #13 [
INFO  16:44:09,053 - #14 ]
INFO  16:44:09,053 - #20 ;
INFO  16:44:09,054 - #2 char
INFO  16:44:09,054 - #2 chNiz
INFO  16:44:09,054 - #13 [
INFO  16:44:09,054 - #14 ]
INFO  16:44:09,054 - #20 ;
INFO  16:44:09,054 - #7 {
INFO  16:44:09,054 - #2 int
INFO  16:44:09,054 - #2 putp
INFO  16:44:09,054 - #9 (
INFO  16:44:09,054 - #2 int
INFO  16:44:09,054 - #2 a
INFO  16:44:09,054 - #11 ,
INFO  16:44:09,054 - #2 int
INFO  16:44:09,054 - #2 idx
INFO  16:44:09,054 - #10 )
INFO  16:44:09,054 - #7 {
INFO  16:44:09,054 - #2 this
INFO  16:44:09,054 - #15 .
INFO  16:44:09,054 - #2 pos
INFO  16:44:09,054 - #13 [
INFO  16:44:09,055 - #2 idx
INFO  16:44:09,055 - #14 ]
INFO  16:44:09,055 - #27 =
INFO  16:44:09,055 - #2 a
INFO  16:44:09,055 - #20 ;
INFO  16:44:09,055 - #24 continue
INFO  16:44:09,055 - #20 ;
INFO  16:44:09,055 - #42 do
INFO  16:44:09,055 - #7 {
INFO  16:44:09,056 - #2 n
INFO  16:44:09,056 - #27 =
INFO  16:44:09,056 - #2 ns
INFO  16:44:09,056 - #13 [
INFO  16:44:09,056 - #2 k
INFO  16:44:09,056 - #31 +
INFO  16:44:09,056 - #2 pos
INFO  16:44:09,056 - #13 [
INFO  16:44:09,056 - #2 k
INFO  16:44:09,056 - #14 ]
INFO  16:44:09,056 - #14 ]
INFO  16:44:09,056 - #20 ;
INFO  16:44:09,056 - #2 chNiz
INFO  16:44:09,056 - #13 [
INFO  16:44:09,056 - #2 k
INFO  16:44:09,056 - #31 +
INFO  16:44:09,056 - #3 1
INFO  16:44:09,056 - #14 ]
INFO  16:44:09,056 - #17 --
INFO  16:44:09,056 - #20 ;
INFO  16:44:09,056 - #2 neg
INFO  16:44:09,056 - #13 [
INFO  16:44:09,056 - #2 k
INFO  16:44:09,056 - #30 -
INFO  16:44:09,056 - #2 pos
INFO  16:44:09,056 - #13 [
INFO  16:44:09,056 - #2 k
INFO  16:44:09,056 - #31 +
INFO  16:44:09,056 - #2 a
INFO  16:44:09,056 - #33 *
INFO  16:44:09,056 - #2 idx
INFO  16:44:09,056 - #14 ]
INFO  16:44:09,056 - #14 ]
INFO  16:44:09,056 - #16 ++
INFO  16:44:09,057 - #20 ;
INFO  16:44:09,057 - #2 size
INFO  16:44:09,057 - #16 ++
INFO  16:44:09,057 - #20 ;
INFO  16:44:09,057 - #21 if
INFO  16:44:09,057 - #9 (
INFO  16:44:09,057 - #2 a
INFO  16:44:09,057 - #45 &&
INFO  16:44:09,057 - #2 idx
INFO  16:44:09,057 - #10 )
INFO  16:44:09,057 - #2 size
INFO  16:44:09,057 - #27 =
INFO  16:44:09,057 - #2 a
INFO  16:44:09,057 - #31 +
INFO  16:44:09,057 - #2 idx
INFO  16:44:09,057 - #33 *
INFO  16:44:09,057 - #3 3
INFO  16:44:09,057 - #30 -
INFO  16:44:09,057 - #9 (
INFO  16:44:09,057 - #2 a
INFO  16:44:09,057 - #31 +
INFO  16:44:09,058 - #3 2
INFO  16:44:09,058 - #33 *
INFO  16:44:09,058 - #2 k
INFO  16:44:09,058 - #10 )
INFO  16:44:09,058 - #20 ;
INFO  16:44:09,058 - #21 if
INFO  16:44:09,058 - #9 (
INFO  16:44:09,058 - #2 b
INFO  16:44:09,058 - #10 )
INFO  16:44:09,058 - #2 k
INFO  16:44:09,058 - #27 =
INFO  16:44:09,058 - #3 4
INFO  16:44:09,058 - #20 ;
INFO  16:44:09,058 - #21 if
INFO  16:44:09,058 - #9 (
INFO  16:44:09,058 - #2 k
INFO  16:44:09,058 - #40 <
INFO  16:44:09,058 - #2 n
INFO  16:44:09,059 - #10 )
INFO  16:44:09,059 - #23 break
INFO  16:44:09,059 - #20 ;
INFO  16:44:09,059 - #21 if
INFO  16:44:09,059 - #9 (
INFO  16:44:09,059 - #2 k
INFO  16:44:09,059 - #38 >
INFO  16:44:09,059 - #9 (
INFO  16:44:09,060 - #2 idx
INFO  16:44:09,060 - #31 +
INFO  16:44:09,060 - #2 a
INFO  16:44:09,060 - #10 )
INFO  16:44:09,060 - #45 &&
INFO  16:44:09,060 - #2 n
INFO  16:44:09,060 - #38 >
INFO  16:44:09,060 - #2 neg
INFO  16:44:09,060 - #13 [
INFO  16:44:09,060 - #2 k
INFO  16:44:09,060 - #14 ]
INFO  16:44:09,060 - #10 )
INFO  16:44:09,060 - #24 continue
INFO  16:44:09,060 - #20 ;
INFO  16:44:09,060 - #21 if
INFO  16:44:09,060 - #9 (
INFO  16:44:09,060 - #2 n
INFO  16:44:09,060 - #38 >
INFO  16:44:09,060 - #2 l
INFO  16:44:09,060 - #10 )
INFO  16:44:09,062 - #23 break
INFO  16:44:09,062 - #20 ;
INFO  16:44:09,062 - #8 }
INFO  16:44:09,062 - #18 while
INFO  16:44:09,062 - #9 (
INFO  16:44:09,062 - #3 1
INFO  16:44:09,062 - #10 )
INFO  16:44:09,062 - #20 ;
INFO  16:44:09,062 - #25 return
INFO  16:44:09,062 - #2 chNiz
INFO  16:44:09,063 - #13 [
INFO  16:44:09,063 - #2 a
INFO  16:44:09,063 - #14 ]
INFO  16:44:09,063 - #20 ;
INFO  16:44:09,063 - #8 }
INFO  16:44:09,063 - #44 void
INFO  16:44:09,063 - #2 putn
INFO  16:44:09,063 - #9 (
INFO  16:44:09,063 - #2 int
INFO  16:44:09,063 - #2 a
INFO  16:44:09,063 - #11 ,
INFO  16:44:09,063 - #2 char
INFO  16:44:09,063 - #2 b
INFO  16:44:09,063 - #10 )
INFO  16:44:09,063 - #2 Klasa
INFO  16:44:09,063 - #2 kNiz
INFO  16:44:09,063 - #13 [
INFO  16:44:09,063 - #14 ]
INFO  16:44:09,063 - #20 ;
INFO  16:44:09,063 - #7 {
INFO  16:44:09,063 - #2 neg
INFO  16:44:09,063 - #13 [
INFO  16:44:09,063 - #2 b
INFO  16:44:09,063 - #14 ]
INFO  16:44:09,063 - #27 =
INFO  16:44:09,064 - #2 a
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 k
INFO  16:44:09,064 - #13 [
INFO  16:44:09,064 - #2 a
INFO  16:44:09,064 - #14 ]
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #2 a
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 p
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #2 a
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 n
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #32 new
INFO  16:44:09,064 - #2 Klasa
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #24 continue
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 kNiz
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #32 new
INFO  16:44:09,064 - #2 Klasa
INFO  16:44:09,064 - #13 [
INFO  16:44:09,064 - #2 b
INFO  16:44:09,064 - #14 ]
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 kNiz
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #32 new
INFO  16:44:09,064 - #2 int
INFO  16:44:09,064 - #20 ;
INFO  16:44:09,064 - #2 kNiz
INFO  16:44:09,064 - #27 =
INFO  16:44:09,064 - #32 new
INFO  16:44:09,065 - #2 Table
INFO  16:44:09,065 - #20 ;
INFO  16:44:09,065 - #2 kNiz
INFO  16:44:09,065 - #27 =
INFO  16:44:09,065 - #32 new
INFO  16:44:09,065 - #2 Klasa
INFO  16:44:09,065 - #13 [
INFO  16:44:09,065 - #2 a
INFO  16:44:09,065 - #14 ]
INFO  16:44:09,065 - #20 ;
INFO  16:44:09,065 - #25 return
INFO  16:44:09,065 - #2 n
INFO  16:44:09,065 - #20 ;
INFO  16:44:09,065 - #25 return
INFO  16:44:09,065 - #20 ;
INFO  16:44:09,065 - #8 }
INFO  16:44:09,065 - #44 void
INFO  16:44:09,065 - #2 proba
INFO  16:44:09,065 - #9 (
INFO  16:44:09,065 - #2 Klasa
INFO  16:44:09,065 - #2 p
INFO  16:44:09,065 - #10 )
INFO  16:44:09,065 - #7 {
INFO  16:44:09,065 - #8 }
INFO  16:44:09,065 - #8 }
INFO  16:44:09,065 - #8 }
INFO  16:44:09,065 - #2 Table
INFO  16:44:09,065 - #2 val
INFO  16:44:09,065 - #20 ;
INFO  16:44:09,065 - #7 {
INFO  16:44:09,065 - #44 void
INFO  16:44:09,065 - #2 main
INFO  16:44:09,065 - #9 (
INFO  16:44:09,066 - #10 )
INFO  16:44:09,066 - #2 int
INFO  16:44:09,066 - #2 x
INFO  16:44:09,066 - #11 ,
INFO  16:44:09,066 - #2 i
INFO  16:44:09,066 - #20 ;
INFO  16:44:09,066 - #2 char
INFO  16:44:09,066 - #2 chArr
INFO  16:44:09,066 - #13 [
INFO  16:44:09,066 - #14 ]
INFO  16:44:09,066 - #20 ;
INFO  16:44:09,066 - #2 char
INFO  16:44:09,066 - #2 r
INFO  16:44:09,066 - #20 ;
INFO  16:44:09,066 - #7 {
INFO  16:44:09,066 - #2 x
INFO  16:44:09,066 - #27 =
INFO  16:44:09,066 - #2 size
INFO  16:44:09,066 - #31 +
INFO  16:44:09,066 - #3 1
INFO  16:44:09,066 - #20 ;
INFO  16:44:09,066 - #2 chArr
INFO  16:44:09,066 - #13 [
INFO  16:44:09,066 - #2 x
INFO  16:44:09,066 - #14 ]
INFO  16:44:09,066 - #27 =
INFO  16:44:09,066 - #30 -
INFO  16:44:09,066 - #2 r
INFO  16:44:09,066 - #20 ;
INFO  16:44:09,067 - #2 i
INFO  16:44:09,067 - #27 =
INFO  16:44:09,067 - #2 val
INFO  16:44:09,067 - #15 .
INFO  16:44:09,067 - #2 pos
INFO  16:44:09,067 - #13 [
INFO  16:44:09,067 - #2 x
INFO  16:44:09,067 - #14 ]
INFO  16:44:09,067 - #20 ;
INFO  16:44:09,067 - #2 chArr
INFO  16:44:09,067 - #13 [
INFO  16:44:09,067 - #3 3
INFO  16:44:09,067 - #31 +
INFO  16:44:09,067 - #2 x
INFO  16:44:09,067 - #14 ]
INFO  16:44:09,067 - #27 =
INFO  16:44:09,067 - #2 r
INFO  16:44:09,067 - #31 +
INFO  16:44:09,067 - #2 r
INFO  16:44:09,067 - #34 /
INFO  16:44:09,067 - #2 chArr
INFO  16:44:09,067 - #13 [
INFO  16:44:09,067 - #2 x
INFO  16:44:09,067 - #14 ]
INFO  16:44:09,067 - #20 ;
INFO  16:44:09,067 - #2 chArr
INFO  16:44:09,067 - #13 [
INFO  16:44:09,067 - #3 3
INFO  16:44:09,067 - #31 +
INFO  16:44:09,067 - #2 x
INFO  16:44:09,067 - #14 ]
INFO  16:44:09,067 - #27 =
INFO  16:44:09,067 - #2 r
INFO  16:44:09,067 - #20 ;
INFO  16:44:09,067 - #2 i
INFO  16:44:09,068 - #27 =
INFO  16:44:09,068 - #2 chArr
INFO  16:44:09,068 - #13 [
INFO  16:44:09,068 - #2 i
INFO  16:44:09,068 - #14 ]
INFO  16:44:09,068 - #31 +
INFO  16:44:09,068 - #2 x
INFO  16:44:09,068 - #20 ;
INFO  16:44:09,068 - #2 i
INFO  16:44:09,068 - #27 =
INFO  16:44:09,068 - #2 x
INFO  16:44:09,068 - #31 +
INFO  16:44:09,068 - #2 val
INFO  16:44:09,068 - #15 .
INFO  16:44:09,068 - #2 k
INFO  16:44:09,068 - #13 [
INFO  16:44:09,068 - #2 x
INFO  16:44:09,068 - #14 ]
INFO  16:44:09,068 - #20 ;
INFO  16:44:09,068 - #43 read
INFO  16:44:09,068 - #9 (
INFO  16:44:09,068 - #2 chArr
INFO  16:44:09,068 - #13 [
INFO  16:44:09,068 - #2 x
INFO  16:44:09,068 - #30 -
INFO  16:44:09,068 - #2 i
INFO  16:44:09,068 - #31 +
INFO  16:44:09,068 - #2 size
INFO  16:44:09,068 - #14 ]
INFO  16:44:09,068 - #10 )
INFO  16:44:09,068 - #20 ;
INFO  16:44:09,068 - #43 read
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 val
INFO  16:44:09,069 - #10 )
INFO  16:44:09,069 - #20 ;
INFO  16:44:09,069 - #43 read
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 size
INFO  16:44:09,069 - #10 )
INFO  16:44:09,069 - #20 ;
INFO  16:44:09,069 - #26 print
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 val
INFO  16:44:09,069 - #11 ,
INFO  16:44:09,069 - #3 3
INFO  16:44:09,069 - #10 )
INFO  16:44:09,069 - #20 ;
INFO  16:44:09,069 - #26 print
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 size
INFO  16:44:09,069 - #11 ,
INFO  16:44:09,069 - #3 4
INFO  16:44:09,069 - #10 )
INFO  16:44:09,069 - #20 ;
INFO  16:44:09,069 - #8 }
INFO  16:44:09,069 - #2 int
INFO  16:44:09,069 - #2 tt
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 int
INFO  16:44:09,069 - #2 a
INFO  16:44:09,069 - #11 ,
INFO  16:44:09,069 - #2 Table
INFO  16:44:09,069 - #2 t
INFO  16:44:09,069 - #10 )
INFO  16:44:09,069 - #2 Klasa
INFO  16:44:09,069 - #2 k
INFO  16:44:09,069 - #20 ;
INFO  16:44:09,069 - #7 {
INFO  16:44:09,069 - #2 a
INFO  16:44:09,069 - #15 .
INFO  16:44:09,069 - #2 putp
INFO  16:44:09,069 - #9 (
INFO  16:44:09,069 - #2 f
INFO  16:44:09,069 - #11 ,
INFO  16:44:09,070 - #2 f
INFO  16:44:09,070 - #10 )
INFO  16:44:09,070 - #20 ;
INFO  16:44:09,070 - #2 t
INFO  16:44:09,070 - #15 .
INFO  16:44:09,070 - #2 putt
INFO  16:44:09,070 - #9 (
INFO  16:44:09,070 - #2 a
INFO  16:44:09,070 - #11 ,
INFO  16:44:09,070 - #2 a
INFO  16:44:09,074 - #10 )
INFO  16:44:09,074 - #20 ;
INFO  16:44:09,074 - #2 t
INFO  16:44:09,074 - #15 .
INFO  16:44:09,074 - #2 putp
INFO  16:44:09,074 - #9 (
INFO  16:44:09,074 - #2 a
INFO  16:44:09,074 - #10 )
INFO  16:44:09,074 - #20 ;
INFO  16:44:09,074 - #2 t
INFO  16:44:09,074 - #15 .
INFO  16:44:09,074 - #2 putn
INFO  16:44:09,074 - #9 (
INFO  16:44:09,074 - #2 a
INFO  16:44:09,074 - #11 ,
INFO  16:44:09,074 - #2 a
INFO  16:44:09,075 - #10 )
INFO  16:44:09,075 - #20 ;
INFO  16:44:09,075 - #2 t
INFO  16:44:09,075 - #15 .
INFO  16:44:09,075 - #2 proba
INFO  16:44:09,075 - #9 (
INFO  16:44:09,075 - #2 null
INFO  16:44:09,075 - #10 )
INFO  16:44:09,075 - #20 ;
INFO  16:44:09,075 - #2 t
INFO  16:44:09,075 - #15 .
INFO  16:44:09,075 - #2 putp
INFO  16:44:09,075 - #9 (
INFO  16:44:09,075 - #2 null
INFO  16:44:09,075 - #11 ,
INFO  16:44:09,075 - #2 null
INFO  16:44:09,075 - #10 )
INFO  16:44:09,075 - #20 ;
INFO  16:44:09,075 - #25 return
INFO  16:44:09,075 - #2 t
INFO  16:44:09,075 - #15 .
INFO  16:44:09,075 - #2 putp
INFO  16:44:09,075 - #9 (
INFO  16:44:09,075 - #2 a
INFO  16:44:09,075 - #11 ,
INFO  16:44:09,075 - #2 a
INFO  16:44:09,075 - #10 )
INFO  16:44:09,075 - #20 ;
INFO  16:44:09,075 - #8 }
INFO  16:44:09,075 - #2 int
INFO  16:44:09,075 - #2 m
INFO  16:44:09,075 - #9 (
INFO  16:44:09,075 - #2 int
INFO  16:44:09,075 - #2 a
INFO  16:44:09,075 - #11 ,
INFO  16:44:09,076 - #2 Table
INFO  16:44:09,076 - #2 b
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #2 char
INFO  16:44:09,076 - #2 c
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #7 {
INFO  16:44:09,076 - #2 chr
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 a
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 chr
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 c
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 len
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 val
INFO  16:44:09,076 - #15 .
INFO  16:44:09,076 - #2 pos
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 len
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 val
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 ord
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 c
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 ord
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 c
INFO  16:44:09,076 - #11 ,
INFO  16:44:09,076 - #2 a
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 tt
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 a
INFO  16:44:09,076 - #11 ,
INFO  16:44:09,076 - #2 a
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 b
INFO  16:44:09,076 - #15 .
INFO  16:44:09,076 - #2 n
INFO  16:44:09,076 - #15 .
INFO  16:44:09,076 - #2 metoda1
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 a
INFO  16:44:09,076 - #11 ,
INFO  16:44:09,076 - #2 c
INFO  16:44:09,076 - #10 )
INFO  16:44:09,076 - #20 ;
INFO  16:44:09,076 - #2 b
INFO  16:44:09,076 - #15 .
INFO  16:44:09,076 - #2 n
INFO  16:44:09,076 - #15 .
INFO  16:44:09,076 - #2 metoda1
INFO  16:44:09,076 - #9 (
INFO  16:44:09,076 - #2 b
INFO  16:44:09,076 - #11 ,
INFO  16:44:09,076 - #2 c
INFO  16:44:09,077 - #10 )
INFO  16:44:09,077 - #20 ;
INFO  16:44:09,077 - #8 }
INFO  16:44:09,077 - #8 }
INFO  16:44:09,083 - Deklarisana simbolicka konstanta <size>: na liniji 2
ERROR 16:44:09,083 - Greska prilikom dodele vrednosti promenljivoj <si>, tipovi se ne poklapaju: na liniji 3
INFO  16:44:09,083 - Deklarisana simbolicka konstanta <b>: na liniji 4
INFO  16:44:09,083 - Deklarisana globalna promenljiva <f>: na liniji 5
INFO  16:44:09,083 - Deklarisana klasa <Klasa>: na liniji 6
ERROR 16:44:09,083 - Klasa ne moze nasledjivati tipa <int>, jer nije klasni: na liniji 6
INFO  16:44:09,083 - Deklarisano polje klase, niz <niz>: na liniji 7
INFO  16:44:09,083 - Obrada metode <metoda1>: na liniji 9
INFO  16:44:09,083 - Pristup simbolu <niz>: na liniji 11
